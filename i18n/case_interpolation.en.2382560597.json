["Do not rely on this feature too much. Matching against a custom data type in Elm code is often\nmuch cleaner. In the current example, we could have also created a data type {H0code|type Fruit = Apple \\| Banana \\| Other String|}\nand three seperate translation keys for the respective cases.\n  ","Advice","Fluent: Case interpolation","Also known as selectors in the Fluent handbook, we chose this name because it mimics (and compiles to)\nElms {H0code|case .. of|} statement. ","All you need to do to get started is take a normal interpolation statement, insert a line-break after\nthe variable name and indent the following lines by at least one space. Then, you provide match statements, line by line.\nThe string to match against is written in square brackets and everything after that is the value.\nMake sure to mark exactly one case as the default case with a leading star {H0code|*|}.","Syntax"]