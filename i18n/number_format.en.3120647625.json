["Fluent: Formatting numbers","Formatting numbers in a variety of different ways is a lot of work.\nThankfully, the Intl API {H0a|Intl API|href|https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat} has this covered. Unfortunately, Elm does not provide\nfirst class access to this API. The tradional interop ways like Flags, Ports and Web components do not work well for\nthis usecase either. Instead, we use the interaction between JSON decoders and ES6 proxies to provide synchronous access.\nFor this to work, you need to npm install {H0a|intl-proxy|href|https://www.npmjs.com/package/intl-proxy} and pass it into your Elm application\nas a flag. The generated code will force you to pass this when creating the initial {H1code|I18n|} instance,\nat which point you never need to use it explicitely in your program again.","Elm and the Intl APIs","The NumberFormat.format method can take a variety of different options which are documented\n{H0a|here|href|https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat}. To use them, just add them as comma-seperated arguments to the NUMBER function call.\nFor example, {H1code|NUMBER($num, style: \"percent\")|} will pass the argument to the Intl API, which will then (in English) essentially\nmultiply your number by 100 and add a '%' sign.","Additional options","Did you know that different languages format numbers in different ways?\nHere is the number \"one-thousand-two-hundred-point-five\" in English: {H0code|1,200.5|}\nand in German: {H0code|1.200,5|}. Displaying the wrong format on your website might confuse your users."]